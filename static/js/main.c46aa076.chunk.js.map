{"version":3,"sources":["Components/home/Home.jsx","Components/navbar/NavBar.jsx","Components/login/Login.jsx","Components/post/Post.jsx","Components/singup/signup.jsx","App.js","index.js"],"names":["Home","props","useState","posts","setPosts","history","useHistory","setPostData","getPosts","a","fetch","response","json","data","singlePost","e","userData","id","target","setPostId","push","alert","useEffect","className","map","_id","onClick","title","text","Spinner","color","NavBar","to","username","method","action","setUserData","localStorage","clear","preventDefault","Login","setUsername","password","setPassword","login","body","JSON","stringify","headers","setItem","token","user","required","type","name","placeholder","onChange","value","Post","setToken","postText","setPostText","getItem","addComment","postId","author","Authorization","postData","rows","comments","comment","timeago","moment","time","fromNow","SignUp","errors","setErrors","confirm","setConfirm","createUser","msg","setTimeout","index","App","Codedtoken","jwt","decode","Date","exp","now","checkToken","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c46aa076.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Spinner } from \"reactstrap\";\nimport \"./home.css\";\n\nconst Home = (props) => {\n  const [posts, setPosts] = useState();\n\n  let history = useHistory();\n\n  const { setPostData } = props;\n  //GET ALL POST\n  const getPosts = async () => {\n    const response = await fetch(\n      \"https://warm-ravine-05729.herokuapp.com/blog\"\n    );\n    const data = await response.json();\n    setPosts(data);\n  };\n\n  //GET THE DATA OF THE CLICKED POST\n  const singlePost = async (e) => {\n    if (props.userData) {\n      let id = e.target.id;\n      props.setPostId(id);\n      const response = await fetch(\n        \"https://warm-ravine-05729.herokuapp.com/blog/\" + id\n      );\n      const data = await response.json();\n      setPostData(data);\n      history.push(\"/post\");\n    } else {\n      alert(\"Please log in\");\n    }\n  };\n\n  //LOAD ALL POST ON PAGE LOAD\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return (\n    <div className=\"home-container\">\n      {/* POST LOADING */}\n      {!posts ? (\n        <div className=\"spinner\">\n          <Spinner color=\"primary\" />\n        </div>\n      ) : (\n        /* DISPLAY ALL POST */\n        posts.map((e) => {\n          return (\n            <div\n              id={e._id}\n              key={e._id}\n              onClick={singlePost}\n              className=\"posts-container\"\n            >\n              <h1 id={e._id}>{e.title}</h1>\n              <div className=\"texts-container\" id={e._id}>\n                {e.text}\n              </div>\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import \"./navbar.css\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst NavBar = (props) => {\n  let history = useHistory();\n\n  const removeToken = (e) => {\n    props.setUserData();\n    localStorage.clear();\n    history.push(\"/\");\n    e.preventDefault();\n  };\n\n  return (\n    <div className=\"nav-container\">\n      <h1>Bloggin Blog</h1>\n      <div className=\"links-container\">\n        {/*IF USER IS LOGGED IN DISPLAY LOGOUT */}\n        {props.userData ? (\n          <div className=\"nav-items\">\n            <Link to=\"/blog-client/\">Home</Link>\n            <p>Hi, {props.userData.username}</p>\n            <form method=\"GET\" action=\"/logout\">\n              <button onClick={removeToken}>Log out</button>\n            </form>\n          </div>\n        ) : (\n          /*IF USER IS NOT YET LOGGED */\n          <div className=\"nav-items\">\n            <Link to=\"/blog-client/\">Home</Link>\n            <Link to=\"/new/user\">Sign up</Link>\n            <Link to=\"/login\">Log in</Link>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./login.css\";\n\nconst Login = (props) => {\n  //STATES\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n\n  //REDIRECT HOOK\n  let history = useHistory();\n\n  const getUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const getPassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const login = async (e) => {\n    e.preventDefault();\n    const response = await fetch(\n      \"https://warm-ravine-05729.herokuapp.com/login\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          username: username,\n          password: password,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    const data = await response.json();\n    if (data) {\n      localStorage.setItem(\"token\", data.token);\n      props.setUserData(data.user);\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <form method=\"POST\" action=\"/login\" className=\"login-form\"></form>\n      <input\n        required\n        type=\"text\"\n        name=\"username\"\n        placeholder=\"username\"\n        onChange={getUsername}\n      />\n      <input\n        required\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"password\"\n        onChange={getPassword}\n      />\n      <button type=\"submit\" onClick={login}>\n        Log in\n      </button>\n    </div>\n  );\n};\n\nexport default Login;\n","import \"./post.css\";\nimport { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Post = (props) => {\n  const [token, setToken] = useState();\n  const [postText, setPostText] = useState(\"\");\n\n  //GET TE TOKEN FROM THE STORAGE\n  const getToken = () => {\n    setToken(localStorage.getItem(\"token\"));\n  };\n  //GET THE TOKEN ON MOUNT\n  useEffect(() => {\n    getToken();\n  }, []);\n\n  const addComment = async (e) => {\n    if (!postText) {\n      alert(\"Please add a comment\");\n      e.preventDefault();\n    } else {\n      e.preventDefault();\n      const response = await fetch(\n        \"https://warm-ravine-05729.herokuapp.com/blog/\" + props.postId,\n        {\n          method: \"PUT\",\n          body: JSON.stringify({\n            author: props.userData,\n            text: postText,\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + token,\n          },\n        }\n      );\n      const data = await response.json();\n      setPostText(\"\");\n      props.setPostData(data);\n    }\n  };\n\n  const eventHandler = (e) => {\n    setPostText(e.target.value);\n  };\n\n  //REDIRECT HOOK\n  let history = useHistory();\n\n  //RETURN TO MAIN PAGE\n  const goBack = () => {\n    props.setPostData();\n    setPostText();\n    history.push(\"/\");\n  };\n\n  return (\n    /* PROTECT AGAINS PAGES REFRESH SETTING THE POSTDATA TO NULL */\n    props.postData ? (\n      <div className=\"post-container\">\n        <h1>{props.postData.title}</h1>\n        <div className=\"text-container\">\n          <p>{props.postData.text}</p>\n        </div>\n        <div className=\"addcomment-form\">\n          <form method=\"PUT\" action=\"/blog/:id\">\n            <textarea\n              rows=\"10\"\n              type=\"text\"\n              value={postText}\n              onChange={eventHandler}\n              placeholder=\"Enter a comment...\"\n            />\n            <div>\n              <button onClick={addComment}>Add</button>\n            </div>\n          </form>\n          <div onClick={goBack} className=\"goback-arrow\">\n            <i className=\"fas fa-arrow-left\"></i>\n          </div>\n        </div>\n        {props.postData.comments.map((comment) => {\n          //time passed since comment was created\n          let timeago = moment(comment.time).fromNow();\n          return (\n            <div key={comment._id} className=\"comment-container\">\n              <p className=\"comment-text\">{comment.text}</p>\n              <div className=\"comment-author\">\n                <p>@{comment.author}</p>\n                <p>{timeago}</p>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    ) : //IF POSTDATA === NULL REDIRECT\n    null\n  );\n};\n\nexport default Post;\n","import \"./signup.css\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SignUp = (props) => {\n  const [errors, setErrors] = useState();\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  const [confirm, setConfirm] = useState();\n\n  const setUser = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const setPass = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const setConfirmPass = (e) => {\n    setConfirm(e.target.value);\n  };\n\n  let history = useHistory();\n\n  const createUser = async (e) => {\n    e.preventDefault();\n    const response = await fetch(\n      \"https://warm-ravine-05729.herokuapp.com/new/user\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          username: username,\n          password: password,\n          confirm: confirm,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    const data = await response.json();\n    if (data.errors) {\n      setErrors(data.errors);\n    }\n    if (data.msg === \"User already exist\") {\n      setErrors([{ msg: \"Username already exist\" }]);\n    } else {\n      setErrors([{ msg: \"User created!\" }]);\n      setTimeout(() => {\n        history.push(\"/login\");\n      }, 1000);\n    }\n  };\n\n  return (\n    <div className=\"signup-form\">\n      <form method=\"POST\" action=\"/new/user\"></form>\n      <input\n        onChange={setUser}\n        required\n        type=\"text\"\n        name=\"username\"\n        placeholder=\"Enter username\"\n      />\n      <input\n        onChange={setPass}\n        required\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"Enter password\"\n      />\n      <input\n        onChange={setConfirmPass}\n        required\n        type=\"password\"\n        name=\"confirm\"\n        placeholder=\"Confirm password\"\n      />\n      <button onClick={createUser} type=\"submit\">\n        Sign up\n      </button>\n      {errors\n        ? errors.map((e, index) => {\n            return (\n              <p key={index} className=\"errors\">\n                {e.msg}\n              </p>\n            );\n          })\n        : null}\n    </div>\n  );\n};\n\nexport default SignUp;\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport jwt from \"jsonwebtoken\";\n\nimport Home from \"./Components/home/Home\";\nimport NavBar from \"./Components/navbar/NavBar\";\nimport Login from \"./Components/login/Login\";\nimport Post from \"./Components/post/Post\";\nimport SingUp from \"./Components/singup/signup\";\n\nfunction App() {\n  //SINGLE POST DATA\n  const [postData, setPostData] = useState();\n  //USER DATA\n  const [userData, setUserData] = useState();\n  //SINGLE POST ID\n  const [postId, setPostId] = useState();\n\n  const checkToken = () => {\n    if (localStorage.getItem(\"token\")) {\n      const Codedtoken = localStorage.getItem(\"token\");\n      const token = jwt.decode(Codedtoken);\n      //WHEN THE TOKEN EXPIRES\n      const expiresAt = new Date(token.exp * 1000);\n      //IF TOKEN EXPIRED; REMOVE IT FROM LOCAL\n      if (expiresAt < new Date(Date.now())) {\n        localStorage.clear();\n      } else if (token) {\n        //GET THE TOKEN DATA\n        setUserData(token);\n      }\n    }\n  };\n\n  useEffect(() => {\n    checkToken();\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <div>\n        <NavBar userData={userData} setUserData={setUserData} />\n      </div>\n      <Switch>\n        <Route exact path=\"/blog-client/\" component={Home}>\n          <Home\n            userData={userData}\n            setPostData={setPostData}\n            postId={postId}\n            setPostId={setPostId}\n          />\n        </Route>\n        <Route path=\"/login\">\n          <Login setUserData={setUserData} />\n        </Route>\n        <Route path=\"/post\">\n          <Post\n            postData={postData}\n            userData={userData}\n            postId={postId}\n            setPostId={setPostId}\n            setPostData={setPostData}\n          />\n        </Route>\n        <Route path=\"/new/user\">\n          <SingUp />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}